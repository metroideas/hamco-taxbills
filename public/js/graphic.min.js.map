{"version":3,"sources":["graphic.js"],"names":["graphic","window","scale","axis","year","d3","scaleBand","domain","data","taxbills","map","d","appraisal","scaleLinear","max","mobile","range","height","padding","width","axisTop","tickSize","axisLeft","tickArguments","format","median","summaries","years","cont","select","classed","selectAll","remove","inputs","enter","append","labels","html","checkbox","type","name","on","this","checked","dataset","datum","filter","line","x","y","svg","attr","offset","bandwidth","bargroups","bars","text","margin","left","bottom","container","document","querySelector","chart","offsetWidth","ratio","top","right","Math","round","draw","scales","innerHTML","call","update","result","county","municipality","countyDistrict","zipcode","compare","start","m","i"],"mappings":"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","file":"graphic.min.js","sourcesContent":["var graphic = window.graphic || {};\n\n(function() {\n  // Dimensions\n  var\n  container = document.querySelector(\"#graphic\"),\n  chart     = container.querySelector(\".chart\"),\n  mobile    = (+container.offsetWidth <= 768),\n  ratio     = (mobile) ? { width: 1, height: 2 } : { width: 8, height: 3 },\n  margin    = {\n    top: 32,\n    right: 16,\n    bottom: 32,\n    left: (mobile) ? 32 : 40,\n    width: function() { return this.right + this.left; },\n    height: function() { return this.top + this.bottom; }\n  },\n  width     = +container.offsetWidth - margin.width(),\n  height    = Math.round(width * (ratio.height / ratio.width) - margin.height())\n  ;\n\n  // Undefined variables\n  var data;\n  var max;\n  var svg;\n\n  /*\n    Public methods:\n    graphic.draw()\n    graphic.update(result) \n    graphic.data(result)\n  */\n  graphic.draw = function() {\n    var scales    = scale();\n    var appraisal = scales.appraisal;\n    var years     = scales.year;\n    var axis      = scales.axis;\n    \n    // Initial setup\n    chart.innerHTML = \"\";\n    \n    svg = d3.select(chart).append(\"svg\")\n        .attr(\"width\", width + margin.width())\n        .attr(\"height\", height + margin.height())\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // Draw axis and remove first axis label for zero\n    svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .call(axis);\n\n    svg.select(\"g.axis g.tick:first-of-type text\").remove();\n\n    bargroups(appraisal, years);\n\n    if (data.summaries) {\n      summaries(appraisal, years);\n    }\n  }\n\n  graphic.update = function(result) {\n    graphic.data(result);\n    graphic.draw();\n  }\n\n  // Sets data variables\n  graphic.data = function(result) {\n    data = result;\n\n    // For location/non-summary data\n    if (data.type != 'county') {\n      data.summaries = function() {\n        return [ data.county, data.municipality, data.countyDistrict, data.zipcode ]\n      }();  \n    }\n    \n    // Sets max value in scales\n    max = function() {\n      function compare(data, start) {\n        var m = d3.max(data, function(d) { return median(d); });\n        return (start > m) ? start : m;\n      }\n      // Initial\n      var m = compare(data.taxbills, 0);\n\n      for (var i in data) {\n        if (data[i].taxbills) {\n          m = compare(data[i].taxbills, m);\n        }\n      }\n      \n      return m;\n    }();\n  }\n\n  function scale() {\n    var year = d3.scaleBand()\n      .domain(data.taxbills.map(function(d) { return d.year; }));\n\n    var appraisal = d3.scaleLinear()\n      .domain([0, max]);\n\n    var axis;\n\n    if (mobile) {\n      year.range([0, height])\n        .padding(0.1);\n\n      appraisal.range([0, width]);\n\n      axis = d3.axisTop(appraisal)\n        .tickSize(-height, 0, 0);\n    \n    } else {\n      year.range([0, width])\n        .padding(0.25);\n\n      appraisal.range([height, 0])\n\n      axis = d3.axisLeft(appraisal)\n        .tickSize(-width, 0, 0);\n    }\n\n    axis.tickArguments([4, d3.format(\"$.0s\")]);\n\n    return {\n      year:      year,\n      axis:      axis,\n      appraisal: appraisal\n    }\n  }\n\n  function median(d) {\n    return d.appraisal.median || 0;\n  }\n\n  function summaries(appraisal, years) {\n    var cont  = d3.select(\"#comparison-container\")\n      .classed(\"hidden\", false);\n\n    cont.selectAll(\"p\").remove();\n\n    var inputs = cont.selectAll(\"p\")\n        .data(data.summaries)\n      .enter().append(\"p\");\n\n    var labels = inputs.append(\"label\");\n\n    labels.html(function(d) {\n      var checkbox = \"<input type='checkbox' data-select='\" +  d.type + \"'> \";\n      return checkbox + d.name;\n    });\n\n    d3.selectAll(\"input[type='checkbox']\").on(\"change\", function() {\n      if (this.checked) {\n          var type  = this.dataset.select;\n          var datum = data.summaries.filter(function(d) {\n            return d.type == type;\n          })[0];\n\n          // d3 line generator\n          var line = d3.line()\n            .x(function(d) { return (mobile) ? appraisal(median(d)) : years(d.year); })\n            .y(function(d) { return (mobile) ? years(d.year) : appraisal(median(d)); });\n\n          svg.append(\"path\").attr(\"class\", \"summary \" + type)\n            .datum(datum.taxbills)\n            .attr(\"d\", line)\n            .attr(\"transform\", function(d) {\n              var offset = years.bandwidth() / 2;\n              \n              return (mobile)\n                ? \"translate(0,\" + offset + \")\"\n                : \"translate(\" + offset + \",0)\";\n            });\n        } else {\n          var line = \"path.summary.\" + this.dataset.select;\n          d3.select(line).remove();\n        }\n    })\n  }\n\n  function bargroups(appraisal, years) {\n\n    var bars = svg.append(\"g\").attr(\"class\", \"bars\")\n      .selectAll(\"g.bar-group\")\n        .data(data.taxbills)\n      .enter().append(\"g\")\n        .attr(\"class\", \"bar-group\");\n\n    bars.attr(\"transform\", function(d) {\n      return (mobile)\n        ? \"translate(0,\" + years(d.year) + \")\"  // Vertical - \"mobile\"\n        : \"translate(\" + years(d.year) + \",0)\"; // Horizontal\n    });\n\n    var labels = bars.append(\"text\")\n      .attr(\"class\", \"label\")\n      .text(function(d) { return d.year; });\n\n    // Bar groups: Orientation-based labels and rects\n    if (mobile) {\n      // Vertical orientation\n      labels.attr(\"transform\",\n        \"translate(\" + -margin.left + \",\" + years.bandwidth() / 2 + \")\")\n        .attr(\"dominant-baseline\", \"middle\");\n\n      bars.append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"height\", years.bandwidth())\n        .attr(\"width\", function(d) { return appraisal(median(d)); })\n\n    } else {\n      // Horizontal orientation\n      labels.attr(\"transform\", function(d) {\n        return \"translate(\" + years.bandwidth() / 2 + \",\" + (height + margin.bottom / 2) + \")\"; })\n        .attr(\"text-anchor\", \"middle\");\n\n      bars.append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", function(d) { return appraisal(median(d)); })\n        .attr(\"height\", function(d) { return height - appraisal(median(d)); })\n        .attr(\"width\", years.bandwidth())\n        //.call(hover) // Mouseover tooltip on horizontal orientation only\n        ;\n    }\n  }\n\n  \n})();\n\n"],"sourceRoot":"/source/"}