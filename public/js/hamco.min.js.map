{"version":3,"sources":["hamco.js"],"names":["window","document","d3","map","zoomed","transform","event","tiles","tile","scale","k","translate","x","y","border","attr","blockgroups","selectAll","style","image","mapTiles","stringify","data","d","exit","remove","enter","append","mapbox","base","tileset","key","url","z","this","r","Number","Math","round","pi","PI","tau","container","querySelector","breakpoint","width","offsetWidth","height","maxZoom","minZoom","innerHTML","projection","geoMercator","path","geoPath","size","zoom","scaleExtent","on","svg","select","defs","html","json","err","topology","topojson","feature","objects","bounds","geoBounds","center","features","call","zoomIdentity","onload","onresize"],"mappings":"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","file":"hamco.min.js","sourcesContent":["(function(window, document, d3) {\n\nif (d3) {\n  window.onload = map;\n  window.onresize = map;  \n}\n\nfunction map() {\n  var\n  pi         = Math.PI,\n  tau        = pi * 2,\n  container  = document.querySelector(\"#map\"),\n  breakpoint = 800,\n  width      = +container.offsetWidth,\n  height     = Math.round(width * 1.1),\n  mobile     = width < breakpoint,\n  maxZoom    = (1 << 26),\n  minZoom    = (1 << 19) * (width / breakpoint)\n  ;\n\n  container.innerHTML = \"\";\n\n  var projection = d3.geoMercator()\n    .scale(1 / tau)\n    .translate([0, 0]);\n\n  var path = d3.geoPath()\n    .projection(projection);\n\n  var tile = d3.tile()\n    .size([width, height]);\n\n  var zoom = d3.zoom()\n    .scaleExtent([minZoom, maxZoom])\n    .on(\"zoom\", zoomed);\n\n  var svg = d3.select(\"#map\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    ;\n\n  var defs = svg.append(\"defs\");\n  \n  var border = defs.append(\"path\")\n    .attr(\"id\", \"border\")\n    .attr(\"fill\", \"none\");\n\n  var mapTiles = svg.append(\"g\")\n    .attr(\"id\", \"map-tiles\");\n\n  var blockgroups = svg.append(\"g\")\n    .attr(\"id\", \"blockgroups\");\n\n  d3.select(\"#map\").append(\"div\")\n    .attr(\"class\", \"attribution\")\n    .html('<a href=\"http://metroideas.org\">Metro Ideas Project</a> | <a href=\"https://www.mapbox.com/about/maps/\" target=\"_blank\">Mapbox</a> | Â© <a href=\"http://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a>')\n\n  d3.json(\"/js/hamco.topo.json\", function(err, topology) {\n    if (err) throw err;\n\n    var data   = topojson.feature(topology, topology.objects.blockgroups);\n    var bounds = d3.geoBounds(data);\n    var center = projection([ ((bounds[0][0] + bounds[1][0]) / 2), ((bounds[0][1] + bounds[1][1]) / 2) ]);\n    \n    blockgroups.selectAll(\"path.blockgroup\")\n        .data(data.features)\n      .enter().append(\"path\")\n        .attr(\"class\", \"blockgroup\")\n        .attr(\"d\", path)\n        .attr(\"fill\", \"none\")\n        ;\n\n    svg\n      .call(zoom)\n      .call(zoom.transform, d3.zoomIdentity\n        .translate(width / 2, height / 2)\n        .scale(minZoom)\n        .translate(-center[0], -center[1])); \n  });\n\n  function zoomed() {\n    var transform = d3.event.transform;\n\n    var tiles = tile\n      .scale(transform.k)\n      .translate([transform.x, transform.y])\n      ();\n\n    border\n      .attr(\"transform\", transform);\n\n    blockgroups.selectAll(\"path.blockgroup\")\n      .attr(\"transform\", transform)\n      .style(\"stroke-width\", 1 / transform.k)\n      ;\n\n    var image = mapTiles\n        .attr(\"transform\", stringify(tiles.scale, tiles.translate))\n      .selectAll(\"image\")\n      .data(tiles, function(d) { return d; });\n\n    image.exit().remove();\n\n    image.enter().append(\"image\")\n      .attr(\"class\", \"tile\")\n      .attr(\"x\", function(d) { return d[0] * 256; })\n      .attr(\"y\", function(d) { return d[1] * 256; })\n      .attr(\"width\", 256)\n      .attr(\"height\", 256)\n      .attr(\"xlink:href\", function(d) {\n        var mapbox = {\n          base:    \"https://api.mapbox.com/styles/v1/mdavidmorton/\",\n          style:   \"ciu5nfp4500eg2ipgdjbmflkw/\",\n          tileset: \"tiles/256/\",\n          key:     \"@2x?access_token=pk.eyJ1IjoibWRhdmlkbW9ydG9uIiwiYSI6ImNpZzN5cDZyNTI3czJ1c201cjlvMjh4OWQifQ.CGZjS_17LA9FrdS92dMUow\",\n          url: function(x,y,z) { return this.base + this.style + this.tileset + z + \"/\" + x + \"/\" + y + this.key; }\n        }\n        var x = d[0], y = d[1], z = d[2];\n       \n        return mapbox.url(x,y,z);\n      });\n  }\n\n  function stringify(scale, translate) {\n    var\n    k = scale / 256,\n    r = scale % 1 ? Number : Math.round\n    ;\n\n    return \"translate(\" + r(translate[0] * scale) + \",\" + r(translate[1] * scale) + \") scale(\" + k + \")\";\n  }\n}\n\n\n})(window, document, d3)"],"sourceRoot":"/source/"}